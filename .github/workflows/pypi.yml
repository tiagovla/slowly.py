name: Publish to PyPI

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml

      - name: Get current version from pyproject.toml
        id: version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['tool']['poetry']['version'])")
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Set version as an environment variable

      - name: Check if version is published on PyPI
        id: check_pypi
        run: |
          VERSION=${{ env.VERSION }}
          # Query PyPI for the latest version
          LATEST_VERSION=$(curl -s "https://pypi.org/pypi/slowly.py/json" | jq -r '.info.version')
          echo "Latest version on PyPI: $LATEST_VERSION"

          if [ "$VERSION" = "$LATEST_VERSION" ]; then
            echo "Version is up-to-date, no need to publish."
            echo "PUBLISH=false" >> $GITHUB_ENV  # Set publish flag to false
          else
            echo "New version detected, will publish."
            echo "PUBLISH=true" >> $GITHUB_ENV  # Set publish flag to true
          fi

      - name: Publish to PyPI
        if: env.PUBLISH == 'true'
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
          poetry publish --build --no-interaction
